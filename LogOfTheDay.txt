- What I did:


* Copied necessary functions & variables from ClientVariables to character_init

* Got movement speed working properly. Wasn't working earlier

* Split the lockOn module into a .Lock() and .Unlock() function

* Moved some functions into character_attack to get attacking to work

* Attempted to be able to set charcter speed on the client -> server by a remote event, but data only syned when I originally sent data to lockOn from a remote function (server -> client). This time, I cant do it reverse for security reasons.
    * Sent a table of public variables to lockOn from the input_check for sync

* Changed initial lock-on raycast from the client to the server (when you would press the lock-on button) so server can have this data for checks.

* Lock-on sends a signal to server (input_check) when locking-on, then sent to the client for handling. This is like the one exception where client can handle something. It's too demanding. Then when player presses unlock or moves too far away, that will get sent again to the input_check, but this time they're out of range or locked-off so it will unlock them and then sent to the client script and run the unlock handling.


- What I need to do:


* Work on attack functionality, get that up and running

* Check in with sync blocking. How can we get that set up? Similar setup? Do a bit of hybrid work between server and client?

* Change the faceEnemy() function code from a while loop to a RenderStepped

* Add the rest of the functionalities into OOP format

* Make sure everything is working like it was before, or better.

* Get rid of old module scripts we no longer need after completing the switch.